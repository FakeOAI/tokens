import{_ as e,c as o,o as s,ae as t}from"./chunks/framework.Dh1jimFm.js";const a="/3731744443802_.pic.jpg",g=JSON.parse('{"title":"Cursor 平台","description":"","frontmatter":{},"headers":[],"relativePath":"llm/cursor.md","filePath":"llm/cursor.md","lastUpdated":1761799104000}'),l={name:"llm/cursor.md"};function n(r,i,d,c,p,h){return s(),o("div",null,i[0]||(i[0]=[t(`<h1 id="cursor-平台" tabindex="-1">Cursor 平台 <a class="header-anchor" href="#cursor-平台" aria-label="Permalink to &quot;Cursor 平台&quot;">​</a></h1><h2 id="接口地址" tabindex="-1">接口地址 <a class="header-anchor" href="#接口地址" aria-label="Permalink to &quot;接口地址&quot;">​</a></h2><div class="language-curl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">curl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>POST http://&lt;你的IP&gt;:&lt;你的端口&gt;/cursor/v1/chat/completions</span></span></code></pre></div><h2 id="模型列表" tabindex="-1">模型列表 <a class="header-anchor" href="#模型列表" aria-label="Permalink to &quot;模型列表&quot;">​</a></h2><ul><li><code>gpt-4o-mini</code></li><li><code>gpt-4</code></li><li><code>gpt-5</code></li><li><code>gpt-4.1</code></li><li><code>gpt-4o</code></li><li><code>gpt-3.5-turbo</code></li><li><code>o1-mini</code></li><li><code>o3-mini</code></li><li><code>o4-mini</code></li><li><code>o1-preview</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>gpt-4.5-preview</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>o1</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>claude-3.5-sonnet</code></li><li><code>claude-3.7-sonnet</code></li><li><code>claude-3.7-sonnet-thinking</code></li><li><code>claude-3-opus</code></li><li><code>claude-3.5-haiku</code></li><li><code>gemini-2.0-flash</code></li><li><code>gemini-2.5-flash-preview-04-17</code></li><li><code>gemini-2.5-pro-exp-03-25</code></li><li><code>gemini-2.5-pro-preview-05-26</code></li><li><code>grok-2</code></li><li><code>grok-3-beta</code></li><li><code>grok-3-mini-beta</code></li><li><code>deepseek-v3</code></li><li><code>deepseek-v3.1</code></li><li><code>deepseek-r1</code></li><li><code>grok-4-0709</code></li><li><code>gemini-2.5-pro-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>gemini-2.5-pro-exp-03-25-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>claude-3.7-sonnet-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>claude-3.7-sonnet-thinking-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>claude-4-sonnet-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>claude-4-sonnet-thinking-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>claude-4-opus-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>claude-4-opus-thinking-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li><code>gpt-5-max</code>：<strong>Pro 订阅类型</strong>的 token 才可用</li><li>Cursor设置里面有的模型都支持</li></ul><h2 id="调用示例" tabindex="-1">调用示例 <a class="header-anchor" href="#调用示例" aria-label="Permalink to &quot;调用示例&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --location</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --request</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://&lt;你的IP&gt;:&lt;你的端口&gt;/cursor/v1/chat/completions&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--header </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Content-Type: application/json&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--header </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Authorization: &lt;你的许可证&gt;&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--data-raw </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;messages&quot;: [{&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;你是什么模型&quot;}],</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;model&quot;: &quot;claude-3.7-sonnet-thinking&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;stream&quot;: true</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;</span></span></code></pre></div><h2 id="平台配置" tabindex="-1">平台配置 <a class="header-anchor" href="#平台配置" aria-label="Permalink to &quot;平台配置&quot;">​</a></h2><ul><li><p>Cursor 平台轮训 token 数量</p><p>由于 Cursor 封控比较厉害，如果轮训号池内所有账号容易导致号池所有账号都被封控，如果设置 Cursor Token 轮训的数量，则只有在固定的数量上进行轮训，直到异常才取新的 token 加入号池内轮训，如果高并发的情况下可以短时间 <strong>榨干</strong> 一个号的价值。</p></li><li><p>Cursor 上限标记的报错</p><p>由于 Cursor 上限的文本不断频繁变动，所以开放给用户自行配置，一行一个报错匹配，匹配上都会进行 token <code>上限</code> 的标记，如果不填写则走程序默认的匹配</p></li><li><p>Cursor 异常标记的报错</p><p>由于 Cursor 异常的文本不断频繁变动，所以开放给用户自行配置，一行一个报错匹配，匹配上都会进行 token <code>异常</code> 的标记，如果不填写则走程序默认的匹配</p></li></ul><p><img src="`+a+'" alt="3731744443802_.pic.jpg"></p>',10)]))}const u=e(l,[["render",n]]);export{g as __pageData,u as default};
